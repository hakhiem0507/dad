// URL API c∆° b·∫£n
const baseUrl = 'https://hakhiem.cf/dad/dadcal.php';

// L·∫•y tu·∫ßn hi·ªán t·∫°i
function getCurrentWeek() {
    const now = new Date();
    const firstDayOfYear = new Date(now.getFullYear(), 0, 1);
    const pastDaysOfYear = (now - firstDayOfYear) / 86400000;
    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);
}

// L·∫•y nƒÉm hi·ªán t·∫°i
function getCurrentYear() {
    return new Date().getFullYear();
}

// T·∫°o danh s√°ch t√πy ch·ªçn tu·∫ßn (1-53)
function populateWeekOptions() {
    const weekSelect = document.getElementById('week-select');
    for (let i = 1; i <= 53; i++) {
        const option = document.createElement('option');
        option.value = i;
        option.text = `${i}`; //Tu·∫ßn text
        weekSelect.appendChild(option);
    }
}

// T·∫°o danh s√°ch t√πy ch·ªçn nƒÉm (2007-2030)
function populateYearOptions() {
    const yearSelect = document.getElementById('year-select');
    for (let i = 2007; i <= 2030; i++) {
        const option = document.createElement('option');
        option.value = i;
        option.text = i;
        yearSelect.appendChild(option);
    }
}

// ƒê·∫∑t gi√° tr·ªã tu·∫ßn v√† nƒÉm m·∫∑c ƒë·ªãnh (tu·∫ßn hi·ªán t·∫°i v√† nƒÉm hi·ªán t·∫°i)
function setDefaultWeekAndYear() {
    const currentWeek = getCurrentWeek();
    const currentYear = getCurrentYear();

    document.getElementById('week-select').value = currentWeek;
    document.getElementById('year-select').value = currentYear;
}

// H√†m ƒë·ªãnh d·∫°ng th·ªùi gian theo chu·∫©n 24 gi·ªù (mm:hh, dd/mm/yyyy)
function formatDateTime(date) {
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear();
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');

    return `${hours}:${minutes}, ${day}/${month}/${year}`;
}

// H√†m c·∫≠p nh·∫≠t th·ªùi gian l·∫ßn fetch cu·ªëi c√πng
function updateLastUpdated() {
    const lastUpdated = document.getElementById('last-updated');
    const now = new Date();
    lastUpdated.textContent = `C·∫≠p nh·∫≠t l√∫c: ${formatDateTime(now)} ‚ü≥`;
}

// H√†m hi·ªÉn th·ªã d·ªØ li·ªáu c√¥ng vi·ªác theo tu·∫ßn
function displaySchedule(data) {
    const weekTitle = document.getElementById('week-title');
    const weekDate = document.getElementById('week-date');
    const content = document.getElementById('content');
    const scheduleDiv = document.getElementById('schedule');

    // X√≥a l·ªãch c≈© tr∆∞·ªõc khi th√™m l·ªãch m·ªõi
    scheduleDiv.innerHTML = '';

    // Hi·ªÉn th·ªã th√¥ng tin chung c·ªßa tu·∫ßn
    weekTitle.textContent = `${data.anoun.week}`;
    weekDate.textContent = `${data.anoun.from}`;
    content.innerHTML = `${data.anoun.content}`;

    // Hi·ªÉn th·ªã c√¥ng vi·ªác theo ng√†y
    data.ketqua.forEach(dayInfo => {
        const dayDiv = document.createElement('div');
        dayDiv.className = 'day';

        // T·∫°o c√°c ph·∫ßn t·ª≠ HTML cho ng√†y v√† c√°c c√¥ng vi·ªác
        const dayTitle = document.createElement('h3');
        dayTitle.innerHTML = `<span class="day-icon">üìÖ</span> ${dayInfo.day}`;

        const morningDiv = document.createElement('p');
        morningDiv.className = 'morning';
        morningDiv.innerHTML = `<span class="icon">‚òÄÔ∏è</span> ${dayInfo.morning || ''}`; //Bu·ªïi s√°ng: 

        const afternoonDiv = document.createElement('p');
        afternoonDiv.className = 'afternoon';
        afternoonDiv.innerHTML = `<span class="icon">üåô</span> ${dayInfo.afternoon || ''}`; //Bu·ªïi chi·ªÅu: 

        // Th√™m c√°c ph·∫ßn t·ª≠ v√†o th·∫ª div c·ªßa ng√†y
        dayDiv.appendChild(dayTitle);
        dayDiv.appendChild(morningDiv);
        dayDiv.appendChild(afternoonDiv);

        // Th√™m ng√†y v√†o th·∫ª cha
        scheduleDiv.appendChild(dayDiv);
    });
}

// H√†m fetch d·ªØ li·ªáu t·ª´ API
function fetchSchedule(week, year, maphong) {
    const url = `${baseUrl}?tuan=${week}&namlv=${year}&maphong=${maphong}`;
    fetch(url)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                displaySchedule(data);
                updateLastUpdated();  // C·∫≠p nh·∫≠t th·ªùi gian fetch
            }
        })
        .catch(error => console.error('Error fetching data:', error));
}
function setFetch(){
	//document.getElementById("fetch-button").disabled = true;
	//document.getElementById("fetch-button").textContent = "Loading...";
	const weekInput = document.getElementById('week-select').value;
    const yearInput = document.getElementById('year-select').value;
	const maphongInput = document.getElementById('maphong-select').value;
    fetchSchedule(weekInput, yearInput, maphongInput);
	//document.getElementById("fetch-button").disabled = false;
	//document.getElementById("fetch-button").textContent = "L·∫•y d·ªØ li·ªáu";
}

// G·ªçi h√†m fetch khi nh·∫•n n√∫t "L·∫•y d·ªØ li·ªáu"
document.getElementById('fetch-button').addEventListener('click', function() { setFetch() });
document.getElementById('last-updated').addEventListener('click', function() { setFetch()});
// G·ªçi h√†m fetch khi thay ƒë·ªïi d·ªØ li·ªáu Select option
document.getElementById('week-select').addEventListener('change', function() { setFetch()});
document.getElementById('year-select').addEventListener('change', function() { setFetch()});
document.getElementById('maphong-select').addEventListener('change', function() { setFetch()});
// G·ªçi h√†m fetch d·ªØ li·ªáu m·∫∑c ƒë·ªãnh khi t·∫£i trang
window.onload = function() {
    populateWeekOptions();  // T·∫°o danh s√°ch tu·∫ßn
    populateYearOptions();  // T·∫°o danh s√°ch nƒÉm
    setDefaultWeekAndYear();  // ƒê·∫∑t tu·∫ßn v√† nƒÉm m·∫∑c ƒë·ªãnh
    fetchSchedule(getCurrentWeek(), getCurrentYear(),"coquan");
};

setInterval(setFetch, 60000); // T·ª± ƒë·ªông fetch sau m·ªói 1 ph√∫t (60,000 milliseconds)

